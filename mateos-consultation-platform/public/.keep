Для переписывания компонентов вашего проекта с использованием Radix и Shadcn/UI, а также добавления анимаций с помощью GSAP и документирования через Storybook, вам нужно создать четкий и детализированный промпт. Вот пример такого промпта:

---

### Промпт для переписывания компонентов

**Цель:** Переписать все компоненты текущего проекта "Mateos - Платформа математических консультаций" с использованием библиотек Radix и Shadcn/UI, добавить анимации фона с помощью GSAP и документировать компоненты с помощью Storybook.

#### 1. Анализ текущей реализации

- **Компоненты:** Изучите все существующие компоненты в проекте, включая `Header`, `Sidebar`, `NotificationCenter`, `PaymentForm`, `LoginPage`, `RegisterPage`, и другие. Обратите внимание на их структуру, стили и функциональность.
- **Структура проекта:** Убедитесь, что вы понимаете, как организованы файлы и папки, чтобы сохранить логику и структуру при переписывании.
- **Основные цвета и логотип:** Изучите текущие цвета и логотип, чтобы сохранить единый стиль. Основные цвета:
  - Основной цвет: #4A90E2 (например, для кнопок и акцентов)
  - Фоновый цвет: #F5F7FA (для фона страниц)
  - Цвет текста: #333333 (для основного текста)
- **Анимации:** Определите, какие анимации необходимо добавить с помощью GSAP, например, плавное появление компонентов, анимации при наведении и т.д.

#### 2. Использование Radix и Shadcn/UI

- **Radix:** Используйте Radix для создания доступных и настраиваемых компонентов, таких как модальные окна, выпадающие списки и т.д. Обратите внимание на доступность и семантику.
- **Shadcn/UI:** Используйте компоненты Shadcn/UI для стилизации и создания пользовательского интерфейса. Убедитесь, что все компоненты соответствуют дизайну и стилю вашего приложения.

#### 3. Анимации с GSAP

- **Анимации фона:** Используйте GSAP для создания анимаций фона при загрузке страниц и появления компонентов. Например, можно добавить эффект "появления" для заголовков и кнопок.
- **Плавные переходы:** Реализуйте плавные переходы между состояниями компонентов, такими как открытие и закрытие модальных окон.

#### 4. Документирование с помощью Storybook

- **Создание документации:** Настройте Storybook для документирования всех компонентов. Каждый компонент должен иметь свои истории, показывающие различные состояния и варианты использования.
- **Примеры использования:** Включите примеры использования компонентов с различными пропсами и состояниями, чтобы разработчики могли легко понять, как использовать каждый компонент.

#### 5. Итог

- Перепишите все компоненты, следуя вышеуказанным рекомендациям.
- Убедитесь, что все компоненты хорошо документированы в Storybook.
- Проверьте, что анимации работают плавно и соответствуют общему стилю приложения.

---

Этот промпт поможет вам организовать процесс переписывания компонентов и внедрения новых технологий, сохраняя при этом единый стиль и функциональность вашего приложения.